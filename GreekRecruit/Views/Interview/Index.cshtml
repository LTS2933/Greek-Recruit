@{
    ViewData["Title"] = "Interview Calendar";
}

@{
    var username = User.Identity?.Name;
    var context = Context.RequestServices.GetService(typeof(SqlDataContext)) as SqlDataContext;
    var user = context?.Users.FirstOrDefault(u => u.username == username);
    bool isAdmin = false;
    if (user?.role == "Admin")
    {
        isAdmin = true;
    }
}

<link href="https://cdn.jsdelivr.net/npm/fullcalendar@6.1.8/index.global.min.css" rel="stylesheet" />
<script src="https://cdn.jsdelivr.net/npm/fullcalendar@6.1.8/index.global.min.js"></script>

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

<nav class="navbar navbar-light bg-light p-3 d-flex justify-content-between">
    <div class="d-flex align-items-center gap-2">
        <a asp-controller="Home" asp-action="Index" class="navbar-brand d-flex align-items-center">
            <img src="/images/greekrecruit_logo.png" alt="Home" width="40" height="40" class="d-inline-block align-top">
            <span class="ms-2">Home</span>
        </a>

        <div class="dropdown">
            <button class="btn btn-danger dropdown-toggle" type="button" id="eventsDropdown" data-bs-toggle="dropdown" aria-expanded="false">
                Events
            </button>
            <ul class="dropdown-menu" aria-labelledby="eventsDropdown">
                @if (isAdmin)
                {
                    <li><a class="dropdown-item" asp-controller="AddEvent" asp-action="Index">Add Event</a></li>
                }
                <li><a class="dropdown-item" asp-controller="Event" asp-action="Index">View Events</a></li>
            </ul>
        </div>

        <div class="dropdown">
            <button class="btn btn-danger dropdown-toggle" type="button" id="pnmsDropdown" data-bs-toggle="dropdown" aria-expanded="false">
                PNMs
            </button>
            <ul class="dropdown-menu" style="white-space: nowrap; min-width: max-content;" aria-labelledby="pnmsDropdown">

                <li><a class="dropdown-item" asp-controller="AddPNM" asp-action="Index">Add PNM</a></li>
                @if (isAdmin)
                {
                    <li><a class="dropdown-item" asp-controller="AddPNM" asp-action="AddPNMCSV">Import PNMs from CSV</a></li>
                    <li><a class="dropdown-item" asp-controller="PNM" asp-action="MassEmail">Send Mass Email</a></li>
                }
            </ul>
        </div>

        <div class="dropdown">
            <button class="btn btn-danger dropdown-toggle" type="button" id="formsDropdown" data-bs-toggle="dropdown" aria-expanded="false">
                Interest Forms
            </button>
            <ul class="dropdown-menu" aria-labelledby="formsDropdown">
                @if (isAdmin)
                {
                    <li><a class="dropdown-item" asp-controller="InterestForm" asp-action="Create">Add Interest Form</a></li>
                }
                <li><a class="dropdown-item" asp-controller="InterestForm" asp-action="Index">View Forms/Submissions</a></li>
            </ul>
        </div>

        <div class="dropdown">
            <button class="btn btn-danger dropdown-toggle" type="button" id="interviewsDropdown" data-bs-toggle="dropdown" aria-expanded="false">
                Interviews
            </button>
            <ul class="dropdown-menu" aria-labelledby="interviewsDropdown">
                <li><a class="dropdown-item" asp-controller="Interview" asp-action="Index">View Interview Schedule</a></li>
            </ul>
        </div>

    </div>


    <style>
        @@media (max-width: 576px) {
            #userMenuButton {
                width: 36px;
                height: 36px;
                font-size: 0.9rem;
                padding: 0.4rem;
            }

            .navbar-brand span {
                font-size: 1rem;
            }

            .navbar .dropdown-toggle::after {
                display: none;
            }
        }

        #userMenuButton {
            width: 42px;
            height: 42px;
            border-radius: 50%;
            background-color: #0d6efd;
            color: white;
            font-weight: bold;
            font-size: 1rem;
            display: flex;
            align-items: center;
            justify-content: center;
            border: none;
        }
    </style>

    <div class="d-flex align-items-center ms-auto">
        <div class="dropdown">
            <button class="btn dropdown-toggle" type="button" id="userMenuButton" data-bs-toggle="dropdown" aria-expanded="false">
                @User.Identity?.Name?.Substring(0, 1).ToUpper()
            </button>
            <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="userMenuButton">
                <li><a class="dropdown-item" asp-controller="Profile" asp-action="Index">Profile</a></li>
                <li><a class="dropdown-item" asp-controller="Dashboard" asp-action="Index">Stats & Insights</a></li>
                <li><a class="dropdown-item" asp-controller="Profile" asp-action="PointsCategories">Points System</a></li>
                @if (isAdmin)
                {
                    <li><a class="dropdown-item" asp-controller="Profile" asp-action="AddUsers">Add Users</a></li>
                    <li><a class="dropdown-item" asp-controller="Profile" asp-action="BatchAddUsers">Batch Add Users</a></li>
                    <li><a class="dropdown-item" asp-controller="AdminTask" asp-action="Index">View Tasks</a></li>
                }
                <li><a asp-action="Logout" class="dropdown-item text-danger">Logout</a></li>
            </ul>
        </div>
    </div>
</nav>

<!-- TempData Alerts -->
@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success alert-dismissible fade show mx-3 mt-3" role="alert">
        @TempData["SuccessMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}
@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show mx-3 mt-3" role="alert">
        @TempData["ErrorMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

<div class="container my-4">

    <div class="d-flex justify-content-between align-items-center flex-wrap gap-2 mb-3">
        <h2 class="mb-0">Interview Calendar</h2>
        <div class="d-flex flex-wrap gap-2">
            <a asp-controller="Home" asp-action="Index" class="btn btn-outline-secondary">← Back to Home</a>
            @if (isAdmin)
            {
                <a asp-controller="Interview" asp-action="Schedule" class="btn btn-primary">Schedule Interview</a>
                <form id="cancelForm" method="post" asp-controller="Interview" asp-action="Cancel" class="d-inline">
                    @Html.AntiForgeryToken()
                <input type="hidden" id="cancelInterviewId" name="interview_id" />
                <button type="submit" class="btn btn-danger d-none" id="cancelBtn">Cancel Selected Interview</button>
            </form>
            }
        </div>
    </div>

    

    <div id="calendar"></div>

   


</div>

<div class="modal fade" id="interviewModal" tabindex="-1" aria-labelledby="interviewModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="interviewModalLabel">Interview Details</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p><strong>Name:</strong> <span id="modalName"></span></p>
                <p><strong>Date/Time:</strong> <span id="modalDateTime"></span></p>
                <p><strong>Notes:</strong> <span id="modalNotes"></span></p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<script>
    let selectedEventId = null;

    document.addEventListener('DOMContentLoaded', function () {
        var calendarEl = document.getElementById('calendar');

        var calendar = new FullCalendar.Calendar(calendarEl, {
            initialView: 'timeGridWeek',
            headerToolbar: {
                left: 'prev,next today',
                center: 'title',
                right: 'dayGridMonth,timeGridWeek,timeGridDay'
            },
            slotMinTime: '08:00:00',
            slotMaxTime: '20:00:00',
            nowIndicator: true,
            events: '/Interview/GetInterviews',
            eventColor: '#0d6efd',
            eventDisplay: 'block',
            height: 'auto',
            timeZone: 'local',
            eventDataTransform: function (event) {
                return {
                    ...event,
                    extendedProps: {
                        notes: event.notes
                    }
                };
            },
            eventClick: function (info) {
                try {
                    calendar.getEvents().forEach(e => {
                        e.setProp("backgroundColor", "#0d6efd");
                    });
                    info.event.setProp("backgroundColor", "#dc3545");

                    selectedEventId = info.event.id;

                    const cancelInput = document.getElementById('cancelInterviewId');
                    if (cancelInput) {
                        cancelInput.value = selectedEventId;
                    }

                    const cancelBtn = document.getElementById('cancelBtn');
                    if (cancelBtn) {
                        cancelBtn.classList.remove("d-none");
                    }

                    document.getElementById('modalName').innerText = info.event.title;
                    document.getElementById('modalDateTime').innerText = new Date(info.event.start).toLocaleString([], {
                        dateStyle: 'medium',
                        timeStyle: 'short'
                    });
                    document.getElementById('modalNotes').innerText = info.event.extendedProps.notes || 'No notes provided';

                    var modalEl = document.getElementById('interviewModal');
                    if (modalEl) {
                        var modal = new bootstrap.Modal(modalEl);
                        modal.show();
                    } else {
                        console.error('Modal element with ID "interviewModal" not found in DOM!');
                    }
                } catch (err) {
                    console.error('Error in eventClick handler:', err);
                }
            },

            dateClick: function () {
                calendar.getEvents().forEach(e => {
                    e.setProp("backgroundColor", "#0d6efd");
                });

                selectedEventId = null;

                const cancelInput = document.getElementById('cancelInterviewId');
                if (cancelInput) {
                    cancelInput.value = "";
                }

                const cancelBtn = document.getElementById('cancelBtn');
                if (cancelBtn) {
                    cancelBtn.classList.add("d-none");
                }
            }
        });

        calendar.render();
    });
</script>



<style>
    #calendar {
        max-width: 100%;
        margin: 0 auto;
    }
</style>
