@{
    var username = User.Identity?.Name;
    var context = Context.RequestServices.GetService(typeof(SqlDataContext)) as SqlDataContext;
    var user = context?.Users.FirstOrDefault(u => u.username == username);
    bool isAdmin = false;
    if (user?.role == "Admin")
    {
        isAdmin = true;
    }
}

<!-- Bootstrap -->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" />
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>


<nav class="navbar navbar-light bg-light p-3 d-flex justify-content-between">
    <div class="d-flex align-items-center gap-2">
        <a asp-controller="Home" asp-action="Index" class="navbar-brand d-flex align-items-center">
            <img src="/images/greekrecruit_logo.png" alt="Home" width="40" height="40" class="d-inline-block align-top">
            <span class="ms-2">Home</span>
        </a>

        <div class="dropdown">
            <button class="btn btn-danger dropdown-toggle" type="button" id="eventsDropdown" data-bs-toggle="dropdown" aria-expanded="false">
                Events
            </button>
            <ul class="dropdown-menu" aria-labelledby="eventsDropdown">
                @if (isAdmin)
                {
                    <li><a class="dropdown-item" asp-controller="AddEvent" asp-action="Index">Add Event</a></li>
                }
                <li><a class="dropdown-item" asp-controller="Event" asp-action="Index">View Events</a></li>
            </ul>
        </div>

        <div class="dropdown">
            <button class="btn btn-danger dropdown-toggle" type="button" id="pnmsDropdown" data-bs-toggle="dropdown" aria-expanded="false">
                PNMs
            </button>
            <ul class="dropdown-menu" style="white-space: nowrap; min-width: max-content;" aria-labelledby="pnmsDropdown">

                <li><a class="dropdown-item" asp-controller="AddPNM" asp-action="Index">Add PNM</a></li>
                @if (isAdmin)
                {
                    <li><a class="dropdown-item" asp-controller="AddPNM" asp-action="AddPNMCSV">Import PNMs from CSV</a></li>
                    <li><a class="dropdown-item" asp-controller="PNM" asp-action="MassEmail">Send Mass Email</a></li>
                }
            </ul>
        </div>

        <div class="dropdown">
            <button class="btn btn-danger dropdown-toggle" type="button" id="formsDropdown" data-bs-toggle="dropdown" aria-expanded="false">
                Interest Forms
            </button>
            <ul class="dropdown-menu" aria-labelledby="formsDropdown">
                @if (isAdmin)
                {
                    <li><a class="dropdown-item" asp-controller="InterestForm" asp-action="Create">Add Interest Form</a></li>
                }
                <li><a class="dropdown-item" asp-controller="InterestForm" asp-action="Index">View Forms/Submissions</a></li>
            </ul>
        </div>

        <div class="dropdown">
            <button class="btn btn-danger dropdown-toggle" type="button" id="interviewsDropdown" data-bs-toggle="dropdown" aria-expanded="false">
                Interviews
            </button>
            <ul class="dropdown-menu" aria-labelledby="interviewsDropdown">
                <li><a class="dropdown-item" asp-controller="Interview" asp-action="Index">View Interview Schedule</a></li>
            </ul>
        </div>

    </div>


    <style>
        @@media (max-width: 576px) {
            #userMenuButton {
                width: 36px;
                height: 36px;
                font-size: 0.9rem;
                padding: 0.4rem;
            }

            .navbar-brand span {
                font-size: 1rem;
            }

            .navbar .dropdown-toggle::after {
                display: none;
            }
        }

        #userMenuButton {
            width: 42px;
            height: 42px;
            border-radius: 50%;
            background-color: #0d6efd;
            color: white;
            font-weight: bold;
            font-size: 1rem;
            display: flex;
            align-items: center;
            justify-content: center;
            border: none;
        }
    </style>

    <div class="d-flex align-items-center ms-auto">
        <div class="dropdown">
            <button class="btn dropdown-toggle" type="button" id="userMenuButton" data-bs-toggle="dropdown" aria-expanded="false">
                @User.Identity?.Name?.Substring(0, 1).ToUpper()
            </button>
            <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="userMenuButton">
                <li><a class="dropdown-item" asp-controller="Profile" asp-action="Index">Profile</a></li>
                <li><a class="dropdown-item" asp-controller="Dashboard" asp-action="Index">Stats & Insights</a></li>
                <li><a class="dropdown-item" asp-controller="Profile" asp-action="PointsCategories">Points System</a></li>
                @if (isAdmin)
                {
                    <li><a class="dropdown-item" asp-controller="Profile" asp-action="AddUsers">Add Users</a></li>
                    <li><a class="dropdown-item" asp-controller="Profile" asp-action="BatchAddUsers">Batch Add Users</a></li>
                    <li><a class="dropdown-item" asp-controller="AdminTask" asp-action="Index">View Tasks</a></li>
                }
                <li><a asp-action="Logout" class="dropdown-item text-danger">Logout</a></li>
            </ul>
        </div>
    </div>
</nav>

@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success alert-dismissible fade show mx-3 mt-3" role="alert">
        @TempData["SuccessMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}
@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show mx-3 mt-3" role="alert">
        @TempData["ErrorMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

<div class="container mt-5">
    <h2>Batch Add New Users</h2>

    <form method="post" asp-controller="Profile" asp-action="BatchAddUserData" id="batchAddForm">
        @Html.AntiForgeryToken()

        <div id="userFields">
            <div class="user-entry mb-4 border rounded p-3">
                <label class="form-label">Full Name:</label>
                <input type="text" class="form-control mb-2" name="fullNames" placeholder="John Smith" required />

                <label class="form-label">Email Address:</label>
                <input type="email" class="form-control" name="emails" placeholder="user@example.com" required />
            </div>
        </div>

        <div class="d-flex gap-2">
            <button type="button" id="addMoreBtn" class="btn btn-outline-primary">+ Add Another User</button>
            <button type="submit" class="btn btn-primary">Submit Users</button>
        </div>
    </form>

    <div class="mt-4">
        <a asp-controller="Home" asp-action="Index" class="btn btn-secondary">← Back to Home</a>
    </div>
</div>

<script>
        document.addEventListener('DOMContentLoaded', function () {
        const userFields = document.getElementById('userFields');
        const addMoreBtn = document.getElementById('addMoreBtn');

        addMoreBtn.addEventListener('click', function () {
            const newEntry = document.createElement('div');
            newEntry.className = 'user-entry mb-4 border rounded p-3';

            newEntry.innerHTML = `
                <label class="form-label">Full Name:</label>
                <input type="text" class="form-control mb-2" name="fullNames" placeholder="John Smith" required pattern="[A-Za-z]+\\s[A-Za-z]+" title="Please enter first and last name separated by a space" />

                <label class="form-label">Email Address:</label>
                <input type="email" class="form-control" name="emails" placeholder="user@example.com" required />

                <button type="button" class="btn btn-sm btn-danger mt-2 remove-entry-btn">Cancel</button>
            `;

            userFields.appendChild(newEntry);

            // Attach remove button listener
            newEntry.querySelector('.remove-entry-btn').addEventListener('click', function () {
                newEntry.remove();
            });
        });
    });

</script>
